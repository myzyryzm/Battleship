{"ast":null,"code":"class Piece {\n  constructor(size) {\n    this.size = size;\n    this.positions = [];\n    this.hits = [];\n    this.alive = true;\n    this.rotation = 0;\n  }\n\n  rotatePiece() {\n    let initRot = this.rotation;\n    let initPos = this.positions;\n    let anchorPoint = initRot === 0 || initRot === 270 ? Math.min(initPos) : Math.max(initPos);\n\n    for (let i = 0; i < 4; i++) {\n      initRot += 90;\n      initRot = initRot < 360 ? initRot : 90;\n    }\n  }\n\n}\n\nclass PlayerPieces {\n  constructor() {\n    this.gamePieces = [new Piece(2), new Piece(3), new Piece(3), new Piece(4), new Piece(5)];\n    this.squares = Array(100).fill(0);\n  }\n\n  canPlaceGamepiece(arr) {\n    let canPlace = true;\n\n    for (let i = 0; i < arr.length; i++) {\n      if (this.squares.includes(arr[i])) {\n        canPlace = false;\n        break;\n      }\n    }\n\n    return canPlace;\n  }\n\n  addPiece(spaces) {\n    for (let i = 0; i < spaces.length; i++) {\n      this.squares[spaces[i]] = 1;\n    }\n  }\n\n  rotatePiece(dex) {\n    let initSpaces = this.gamePieces[dex].positions;\n    this.gamePieces[dex].rotatePiece();\n    let nuSpaces = this.gamePieces[dex].positions;\n\n    for (let i = 0; i < initSpaces.length; i++) {\n      this.squares[initSpaces[i]] = 0;\n      this.squares[nuSpaces[i]] = 1;\n    }\n  }\n\n}\n\nlet playerPieces = new PlayerPieces();\nexport default playerPieces;","map":{"version":3,"sources":["/Users/ryzm/Desktop/Battleship/src/playerPieces.js"],"names":["Piece","constructor","size","positions","hits","alive","rotation","rotatePiece","initRot","initPos","anchorPoint","Math","min","max","i","PlayerPieces","gamePieces","squares","Array","fill","canPlaceGamepiece","arr","canPlace","length","includes","addPiece","spaces","dex","initSpaces","nuSpaces","playerPieces"],"mappings":"AAAA,MAAMA,KAAN,CAAW;AACTC,EAAAA,WAAW,CAACC,IAAD,EAAM;AACf,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,KAAL,GAAa,IAAb;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACD;;AAEDC,EAAAA,WAAW,GAAE;AACX,QAAIC,OAAO,GAAG,KAAKF,QAAnB;AACA,QAAIG,OAAO,GAAG,KAAKN,SAAnB;AACA,QAAIO,WAAW,GAAGF,OAAO,KAAK,CAAZ,IAAiBA,OAAO,KAAK,GAA7B,GAAmCG,IAAI,CAACC,GAAL,CAASH,OAAT,CAAnC,GAAuDE,IAAI,CAACE,GAAL,CAASJ,OAAT,CAAzE;;AACA,SAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACxBN,MAAAA,OAAO,IAAI,EAAX;AACAA,MAAAA,OAAO,GAAGA,OAAO,GAAG,GAAV,GAAgBA,OAAhB,GAA0B,EAApC;AAED;AACF;;AAlBQ;;AAqBX,MAAMO,YAAN,CAAkB;AAChBd,EAAAA,WAAW,GAAE;AACX,SAAKe,UAAL,GAAkB,CAAC,IAAIhB,KAAJ,CAAU,CAAV,CAAD,EAAe,IAAIA,KAAJ,CAAU,CAAV,CAAf,EAA6B,IAAIA,KAAJ,CAAU,CAAV,CAA7B,EAA2C,IAAIA,KAAJ,CAAU,CAAV,CAA3C,EAAyD,IAAIA,KAAJ,CAAU,CAAV,CAAzD,CAAlB;AACA,SAAKiB,OAAL,GAAeC,KAAK,CAAC,GAAD,CAAL,CAAWC,IAAX,CAAgB,CAAhB,CAAf;AACD;;AACDC,EAAAA,iBAAiB,CAACC,GAAD,EAAK;AACpB,QAAIC,QAAQ,GAAG,IAAf;;AACA,SAAI,IAAIR,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGO,GAAG,CAACE,MAAvB,EAA+BT,CAAC,EAAhC,EAAmC;AACjC,UAAG,KAAKG,OAAL,CAAaO,QAAb,CAAsBH,GAAG,CAACP,CAAD,CAAzB,CAAH,EAAiC;AAC/BQ,QAAAA,QAAQ,GAAG,KAAX;AACA;AACD;AACF;;AACD,WAAOA,QAAP;AACD;;AAEDG,EAAAA,QAAQ,CAACC,MAAD,EAAQ;AACd,SAAI,IAAIZ,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGY,MAAM,CAACH,MAA1B,EAAkCT,CAAC,EAAnC,EAAsC;AACpC,WAAKG,OAAL,CAAaS,MAAM,CAACZ,CAAD,CAAnB,IAA0B,CAA1B;AACD;AACF;;AAEDP,EAAAA,WAAW,CAACoB,GAAD,EAAK;AACd,QAAIC,UAAU,GAAG,KAAKZ,UAAL,CAAgBW,GAAhB,EAAqBxB,SAAtC;AACA,SAAKa,UAAL,CAAgBW,GAAhB,EAAqBpB,WAArB;AACA,QAAIsB,QAAQ,GAAG,KAAKb,UAAL,CAAgBW,GAAhB,EAAqBxB,SAApC;;AACA,SAAI,IAAIW,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGc,UAAU,CAACL,MAA9B,EAAsCT,CAAC,EAAvC,EAA0C;AACxC,WAAKG,OAAL,CAAaW,UAAU,CAACd,CAAD,CAAvB,IAA8B,CAA9B;AACA,WAAKG,OAAL,CAAaY,QAAQ,CAACf,CAAD,CAArB,IAA4B,CAA5B;AACD;AACF;;AA9Be;;AAiClB,IAAIgB,YAAY,GAAG,IAAIf,YAAJ,EAAnB;AAGA,eAAee,YAAf","sourcesContent":["class Piece{\n  constructor(size){\n    this.size = size;\n    this.positions = [];\n    this.hits = [];\n    this.alive = true;\n    this.rotation = 0;\n  }\n\n  rotatePiece(){\n    let initRot = this.rotation;\n    let initPos = this.positions;\n    let anchorPoint = initRot === 0 || initRot === 270 ? Math.min(initPos) : Math.max(initPos);\n    for(let i = 0; i < 4; i++){\n      initRot += 90;\n      initRot = initRot < 360 ? initRot : 90;\n      \n    }\n  }\n}\n\nclass PlayerPieces{\n  constructor(){\n    this.gamePieces = [new Piece(2), new Piece(3), new Piece(3), new Piece(4), new Piece(5)];\n    this.squares = Array(100).fill(0);\n  }\n  canPlaceGamepiece(arr){\n    let canPlace = true;\n    for(let i = 0; i < arr.length; i++){\n      if(this.squares.includes(arr[i])){\n        canPlace = false;\n        break;\n      }\n    }\n    return canPlace;\n  }\n\n  addPiece(spaces){\n    for(let i = 0; i < spaces.length; i++){\n      this.squares[spaces[i]] = 1;\n    }\n  }\n\n  rotatePiece(dex){\n    let initSpaces = this.gamePieces[dex].positions;\n    this.gamePieces[dex].rotatePiece();\n    let nuSpaces = this.gamePieces[dex].positions;\n    for(let i = 0; i < initSpaces.length; i++){\n      this.squares[initSpaces[i]] = 0;\n      this.squares[nuSpaces[i]] = 1;\n    }\n  }\n}\n\nlet playerPieces = new PlayerPieces()\n\n\nexport default playerPieces;\n"]},"metadata":{},"sourceType":"module"}