{"ast":null,"code":"var _jsxFileName = \"/Users/ryzm/Desktop/Battleship/src/Dropdown.js\";\nimport React, { Component } from 'react';\nimport characters from \"./characters.js\";\nimport './App.css';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showMenu = event => {\n      event.preventDefault();\n      this.setState({\n        menuShowing: true\n      }, () => {\n        document.addEventListener('click', this.closeMenu);\n      });\n    };\n\n    this.closeMenu = event => {\n      if (!this.dropdownMenu.contains(event.target)) {\n        this.setState({\n          menuShowing: false\n        }, () => {\n          document.removeEventListener('click', this.closeMenu);\n        });\n      }\n    };\n\n    this.forceClose = () => {\n      this.setState({\n        menuShowing: false\n      }, () => {\n        document.removeEventListener('click', this.closeMenu);\n      });\n    };\n\n    this.state = {\n      menuShowing: false\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          isFirst = _this$props.isFirst,\n          chooseCharacter = _this$props.chooseCharacter,\n          currentCharacter = _this$props.currentCharacter;\n    let playerButtons = characters.map((character, i) => {\n      return React.createElement(\"button\", {\n        key: i.toString(),\n        className: character === currentCharacter ? \"currentCharacterButton\" : \"characterButton\",\n        onClick: () => {\n          chooseCharacter(isFirst, character);\n          this.forceClose();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, character);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.showMenu,\n      className: \"dropdownButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, isFirst ? \"Player One\" : \"Player Two\"), this.state.menuShowing ? React.createElement(\"div\", {\n      className: \"menu\",\n      ref: element => {\n        this.dropdownMenu = element;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, playerButtons) : null);\n  }\n\n}\n\nexport default Dropdown;","map":{"version":3,"sources":["/Users/ryzm/Desktop/Battleship/src/Dropdown.js"],"names":["React","Component","characters","Dropdown","constructor","props","showMenu","event","preventDefault","setState","menuShowing","document","addEventListener","closeMenu","dropdownMenu","contains","target","removeEventListener","forceClose","state","render","isFirst","chooseCharacter","currentCharacter","playerButtons","map","character","i","toString","element"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAO,WAAP;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,QAPmB,GAOPC,KAAD,IAAW;AACpBA,MAAAA,KAAK,CAACC,cAAN;AAEA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAd,EAAqC,MAAM;AACzCC,QAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKC,SAAxC;AACD,OAFD;AAGD,KAbkB;;AAAA,SAenBA,SAfmB,GAeNN,KAAD,IAAW;AAErB,UAAI,CAAC,KAAKO,YAAL,CAAkBC,QAAlB,CAA2BR,KAAK,CAACS,MAAjC,CAAL,EAA+C;AAE7C,aAAKP,QAAL,CAAc;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAd,EAAsC,MAAM;AAC1CC,UAAAA,QAAQ,CAACM,mBAAT,CAA6B,OAA7B,EAAsC,KAAKJ,SAA3C;AACD,SAFD;AAID;AACF,KAxBkB;;AAAA,SA0BnBK,UA1BmB,GA0BN,MAAM;AACjB,WAAKT,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAAd,EAAsC,MAAM;AACxCC,QAAAA,QAAQ,CAACM,mBAAT,CAA6B,OAA7B,EAAsC,KAAKJ,SAA3C;AACD,OAFH;AAGD,KA9BkB;;AAEjB,SAAKM,KAAL,GAAa;AACXT,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AA2BDU,EAAAA,MAAM,GAAG;AAAA,wBAC8C,KAAKf,KADnD;AAAA,UACAgB,OADA,eACAA,OADA;AAAA,UACSC,eADT,eACSA,eADT;AAAA,UAC0BC,gBAD1B,eAC0BA,gBAD1B;AAEP,QAAIC,aAAa,GAAGtB,UAAU,CAACuB,GAAX,CAAe,CAACC,SAAD,EAAWC,CAAX,KAAgB;AACjD,aACE;AAAQ,QAAA,GAAG,EAAIA,CAAC,CAACC,QAAF,EAAf;AAA6B,QAAA,SAAS,EAAIF,SAAS,KAAKH,gBAAd,GAAiC,wBAAjC,GAA4D,iBAAtG;AACA,QAAA,OAAO,EAAE,MAAK;AAACD,UAAAA,eAAe,CAACD,OAAD,EAAUK,SAAV,CAAf;AAAqC,eAAKR,UAAL;AAAkB,SADtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACyEQ,SADzE,CADF;AAGD,KAJmB,CAApB;AAKA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKpB,QAAtB;AAAgC,MAAA,SAAS,EAAG,gBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8De,OAAO,GAAG,YAAH,GAAkB,YAAvF,CADF,EAGI,KAAKF,KAAL,CAAWT,WAAX,GAEI;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,GAAG,EAAGmB,OAAD,IAAa;AAChB,aAAKf,YAAL,GAAoBe,OAApB;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGL,aANH,CAFJ,GAYI,IAfR,CADF;AAqBD;;AA7D8B;;AAgEjC,eAAerB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport characters from \"./characters.js\";\nimport './App.css';\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuShowing: false,\n    };\n  }\n  \n  showMenu = (event) => {\n    event.preventDefault();\n    \n    this.setState({ menuShowing: true }, () => {\n      document.addEventListener('click', this.closeMenu);\n    });\n  }\n  \n  closeMenu = (event) => {\n    \n    if (!this.dropdownMenu.contains(event.target)) {\n      \n      this.setState({ menuShowing: false }, () => {\n        document.removeEventListener('click', this.closeMenu);\n      });  \n      \n    }\n  }\n  \n  forceClose = () => {\n    this.setState({ menuShowing: false }, () => {\n        document.removeEventListener('click', this.closeMenu);\n      });\n  }\n\n  render() {\n    const {isFirst, chooseCharacter, currentCharacter} = this.props;\n    let playerButtons = characters.map((character,i) =>{\n      return(\n        <button key = {i.toString()} className = {character === currentCharacter ? \"currentCharacterButton\" : \"characterButton\"} \n        onClick={() =>{chooseCharacter(isFirst, character); this.forceClose()}}>{character}</button>)\n    })\n    return (\n      <div>\n        <button onClick={this.showMenu} className = \"dropdownButton\">{isFirst ? \"Player One\" : \"Player Two\"}</button>\n        {\n          this.state.menuShowing\n            ? (\n              <div\n                className=\"menu\"\n                ref={(element) => {\n                  this.dropdownMenu = element;\n                }}\n              >\n                {playerButtons}\n              </div>\n            )\n            : (\n              null\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Dropdown"]},"metadata":{},"sourceType":"module"}